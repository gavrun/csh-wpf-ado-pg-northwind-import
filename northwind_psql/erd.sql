-- This script was generated by the ERD tool in pgAdmin 4.

BEGIN;

CREATE TABLE IF NOT EXISTS public.categories
(
    category_id smallint NOT NULL,
    category_name character varying(15) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    picture bytea,
    CONSTRAINT pk_categories PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS public.customer_customer_demo
(
    customer_id character varying(5) COLLATE pg_catalog."default" NOT NULL,
    customer_type_id character varying(5) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_customer_customer_demo PRIMARY KEY (customer_id, customer_type_id)
);

CREATE TABLE IF NOT EXISTS public.customer_demographics
(
    customer_type_id character varying(5) COLLATE pg_catalog."default" NOT NULL,
    customer_desc text COLLATE pg_catalog."default",
    CONSTRAINT pk_customer_demographics PRIMARY KEY (customer_type_id)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id character varying(5) COLLATE pg_catalog."default" NOT NULL,
    company_name character varying(40) COLLATE pg_catalog."default" NOT NULL,
    contact_name character varying(30) COLLATE pg_catalog."default",
    contact_title character varying(30) COLLATE pg_catalog."default",
    address character varying(60) COLLATE pg_catalog."default",
    city character varying(15) COLLATE pg_catalog."default",
    region character varying(15) COLLATE pg_catalog."default",
    postal_code character varying(10) COLLATE pg_catalog."default",
    country character varying(15) COLLATE pg_catalog."default",
    phone character varying(24) COLLATE pg_catalog."default",
    fax character varying(24) COLLATE pg_catalog."default",
    CONSTRAINT pk_customers PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS public.employee_territories
(
    employee_id smallint NOT NULL,
    territory_id character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_employee_territories PRIMARY KEY (employee_id, territory_id)
);

CREATE TABLE IF NOT EXISTS public.employees
(
    employee_id smallint NOT NULL,
    last_name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(10) COLLATE pg_catalog."default" NOT NULL,
    title character varying(30) COLLATE pg_catalog."default",
    title_of_courtesy character varying(25) COLLATE pg_catalog."default",
    birth_date date,
    hire_date date,
    address character varying(60) COLLATE pg_catalog."default",
    city character varying(15) COLLATE pg_catalog."default",
    region character varying(15) COLLATE pg_catalog."default",
    postal_code character varying(10) COLLATE pg_catalog."default",
    country character varying(15) COLLATE pg_catalog."default",
    home_phone character varying(24) COLLATE pg_catalog."default",
    extension character varying(4) COLLATE pg_catalog."default",
    photo bytea,
    notes text COLLATE pg_catalog."default",
    reports_to smallint,
    photo_path character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT pk_employees PRIMARY KEY (employee_id)
);

CREATE TABLE IF NOT EXISTS public.order_details
(
    order_id smallint NOT NULL,
    product_id smallint NOT NULL,
    unit_price real NOT NULL,
    quantity smallint NOT NULL,
    discount real NOT NULL,
    CONSTRAINT pk_order_details PRIMARY KEY (order_id, product_id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id smallint NOT NULL,
    customer_id character varying(5) COLLATE pg_catalog."default",
    employee_id smallint,
    order_date date,
    required_date date,
    shipped_date date,
    ship_via smallint,
    freight real,
    ship_name character varying(40) COLLATE pg_catalog."default",
    ship_address character varying(60) COLLATE pg_catalog."default",
    ship_city character varying(15) COLLATE pg_catalog."default",
    ship_region character varying(15) COLLATE pg_catalog."default",
    ship_postal_code character varying(10) COLLATE pg_catalog."default",
    ship_country character varying(15) COLLATE pg_catalog."default",
    CONSTRAINT pk_orders PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id smallint NOT NULL,
    product_name character varying(40) COLLATE pg_catalog."default" NOT NULL,
    supplier_id smallint,
    category_id smallint,
    quantity_per_unit character varying(20) COLLATE pg_catalog."default",
    unit_price real,
    units_in_stock smallint,
    units_on_order smallint,
    reorder_level smallint,
    discontinued integer NOT NULL,
    CONSTRAINT pk_products PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.region
(
    region_id smallint NOT NULL,
    region_description character varying(60) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_region PRIMARY KEY (region_id)
);

CREATE TABLE IF NOT EXISTS public.shippers
(
    shipper_id smallint NOT NULL,
    company_name character varying(40) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(24) COLLATE pg_catalog."default",
    CONSTRAINT pk_shippers PRIMARY KEY (shipper_id)
);

CREATE TABLE IF NOT EXISTS public.suppliers
(
    supplier_id smallint NOT NULL,
    company_name character varying(40) COLLATE pg_catalog."default" NOT NULL,
    contact_name character varying(30) COLLATE pg_catalog."default",
    contact_title character varying(30) COLLATE pg_catalog."default",
    address character varying(60) COLLATE pg_catalog."default",
    city character varying(15) COLLATE pg_catalog."default",
    region character varying(15) COLLATE pg_catalog."default",
    postal_code character varying(10) COLLATE pg_catalog."default",
    country character varying(15) COLLATE pg_catalog."default",
    phone character varying(24) COLLATE pg_catalog."default",
    fax character varying(24) COLLATE pg_catalog."default",
    homepage text COLLATE pg_catalog."default",
    CONSTRAINT pk_suppliers PRIMARY KEY (supplier_id)
);

CREATE TABLE IF NOT EXISTS public.territories
(
    territory_id character varying(20) COLLATE pg_catalog."default" NOT NULL,
    territory_description character varying(60) COLLATE pg_catalog."default" NOT NULL,
    region_id smallint NOT NULL,
    CONSTRAINT pk_territories PRIMARY KEY (territory_id)
);

CREATE TABLE IF NOT EXISTS public.us_states
(
    state_id smallint NOT NULL,
    state_name character varying(100) COLLATE pg_catalog."default",
    state_abbr character varying(2) COLLATE pg_catalog."default",
    state_region character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT pk_usstates PRIMARY KEY (state_id)
);

ALTER TABLE IF EXISTS public.customer_customer_demo
    ADD CONSTRAINT fk_customer_customer_demo_customer_demographics FOREIGN KEY (customer_type_id)
    REFERENCES public.customer_demographics (customer_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_customer_demo
    ADD CONSTRAINT fk_customer_customer_demo_customers FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employee_territories
    ADD CONSTRAINT fk_employee_territories_employees FOREIGN KEY (employee_id)
    REFERENCES public.employees (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employee_territories
    ADD CONSTRAINT fk_employee_territories_territories FOREIGN KEY (territory_id)
    REFERENCES public.territories (territory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employees
    ADD CONSTRAINT fk_employees_employees FOREIGN KEY (reports_to)
    REFERENCES public.employees (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT fk_order_details_orders FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT fk_order_details_products FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fk_orders_customers FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fk_orders_employees FOREIGN KEY (employee_id)
    REFERENCES public.employees (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fk_orders_shippers FOREIGN KEY (ship_via)
    REFERENCES public.shippers (shipper_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT fk_products_categories FOREIGN KEY (category_id)
    REFERENCES public.categories (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT fk_products_suppliers FOREIGN KEY (supplier_id)
    REFERENCES public.suppliers (supplier_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.territories
    ADD CONSTRAINT fk_territories_region FOREIGN KEY (region_id)
    REFERENCES public.region (region_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;